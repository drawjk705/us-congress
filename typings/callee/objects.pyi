"""
This type stub file was generated by pyright.
"""

from callee.base import BaseMatcher

"""
Matchers for various common kinds of objects.
"""
class ObjectMatcher(BaseMatcher):
    """Base class for object matchers.
    This class shouldn't be used directly.
    """
    def __repr__(self):
        ...
    


class Bytes(ObjectMatcher):
    """Matches a byte array, i.e. the :class:`bytes` type.

    | On Python 2, :class:`bytes` class is identical to :class:`str` class.
    | On Python 3, byte strings are separate class, distinct from :class:`str`.
    """
    def match(self, value):
        ...
    


class Coroutine(ObjectMatcher):
    """Matches an asynchronous coroutine.

    A coroutine is a result of an asynchronous function call, where the async
    function has been defined using ``@asyncio.coroutine`` or the ``async def``
    syntax.

    These are only available in Python 3.4 and above.
    On previous versions of Python, no object will match this matcher.
    """
    def match(self, value):
        ...
    


class FileLike(ObjectMatcher):
    """Matches a file-like object.

    In general, a `file-like object` is an object you can ``read`` data from,
    or ``write`` data to.
    """
    def __init__(self, read=..., write=...) -> None:
        """
        :param read:

            Whether only to match objects that do support (``True``)
            or don't support (``False``) reading from them.
            If ``None`` is passed, reading capability is not matched against.

        :param write:

            Whether only to match objects that do support (``True``)
            or don't support (``False``) writing to them.
            If ``None`` is passed, writing capability is not matched against.
        """
        ...
    
    def match(self, value):
        ...
    
    def __repr__(self):
        """Return a representation of this matcher."""
        ...
    


def is_method(arg, min_arity=..., max_arity=...):
    """Check if argument is a method.

    Optionally, we can also check if minimum or maximum arities
    (number of accepted arguments) match given minimum and/or maximum.
    """
    ...


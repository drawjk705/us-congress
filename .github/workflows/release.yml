name: Release
on:
    workflow_dispatch:
        inputs:
            bump_type:
                description: type of bump -- [major, minor, patch, prerelease]
                required: true

jobs:
    tag_and_publish:
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v2

            - name: set up python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: install poetry
              uses: snok/install-poetry@v1.1.1
              with:
                  version: 1.1.4
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v2
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ secrets.CACHE_VERSION }}

            - name: install poetry dependencies
              run: poetry install
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

            - name: bump version
              run: |
                  echo $BUMP_TYPE
                  poetry version $BUMP_TYPE
              env:
                  BUMP_TYPE: ${{ github.event.inputs.bump_type }}

            - name: poetry publish to pypi
              run: |
                  poetry build
                  poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
                  poetry publish

            - name: poetry publish to pypi-test
              run: |
                  poetry build
                  poetry config repositories.testpypi https://test.pypi.org/legacy/
                  poetry config pypi-token.testpypi ${{ secrets.PYPI_TEST_TOKEN }}
                  poetry publish -r testpypi

            - name: get version number
              run: |
                  VERSION=$(poetry version --short)
                  echo "version=v$VERSION" >> $GITHUB_ENV

            - name: commit to master
              uses: EndBug/add-and-commit@v6
              with:
                  message: bump ${{ env.version }}
                  tag: ${{ env.version }}
                  author_email: drawjk705@gmail.com

            - name: store version
              uses: nick-invision/persist-action-data@v1
              with:
                  data: ${{ env.version }}
                  variable: TAGGED_VERSION

    github_release:
        needs: [tag_and_publish]
        if: ${{ !startsWith(github.event.head_commit.message, 'chore') }}
        runs-on: ubuntu-latest
        steps:
            - name: checkout repo
              uses: actions/checkout@v2

            - name: get version
              id: version_num
              uses: nick-invision/persist-action-data@v1
              with:
                  retrieve_variables: TAGGED_VERSION

            - name: create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.version_num.outputs.TAGGED_VERSION }}
                  release_name: Release ${{ steps.version_num.outputs.TAGGED_VERSION }}
                  draft: false
                  prerelease: startsWith(github.event.head.commit.message, 'prerelease')
